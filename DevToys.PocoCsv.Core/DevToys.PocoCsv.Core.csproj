<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
	  <TargetFrameworks>netcoreapp3.0;netcoreapp3.1;net5.0;net6.0;net7.0</TargetFrameworks>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Description>One of the fastest Csv reader deserialzer available.

DevToys.PocoCsv.Core is a very fast reader and writer for Csv.
It contains CsvStreamReader, CsvStreamWriter and Serialization classes CsvReader&lt;T&gt; and CsvWriter&lt;T&gt;.

Read/write serialize/deserialize data to and from Csv.

- Conform RFC 4180.
- Auto separator detection.
- Auto line feed/break detection.
- Sequential read/materializing with ReadAsEnumerable().
- Csv schema Retrieval with CsvUtils.GetCsvSchema().
- Casting Error log.
- Ability to add custom parsers.
- Import to DataTable

Readme:
https://www.nuget.org/packages/DevToys.PocoCsv.Core/

	</Description>
    <PackageProjectUrl>https://github.com/GuidoK73/DevToys.PocoCsv.Core/wiki/DevToys.PocoCsv.Core</PackageProjectUrl>
    <RepositoryUrl>https://github.com/GuidoK73/DevToys.PocoCsv.Core</RepositoryUrl>
    <RepositoryType>Git</RepositoryType>
    <Authors>GuidoK73</Authors>
	<PackageTags>csv;export;import;comma separated;4180;delimited;poco;csv parser;parse csv;DataTable;Import Csv;Export Csv;Csv Object</PackageTags>
    <Company />
    <Version>2.0.3</Version>
    <PackageLicenseFile>GPL.txt</PackageLicenseFile>
    <Title>DevToys.Poco.Csv.Core</Title>
    <Copyright>2023</Copyright>
    <Product>DevToys.Poco.Csv.Core</Product>
    <PackageReleaseNotes>2.0.3
- Bugfix: Deserialize with lesser column count then in CSV.

2.0.2
- Bugfix: not properly reading escaped double quotes.
- Minor improvements

2.0
- Improved CsvWriter&lt;T&gt; speed.
- Extended ICustomCsvParser&lt;T&gt; to be supported by the CsvWriter&lt;T&gt; as well.
- ICustomCsvParser&lt;T&gt;.Parse() has been removed.
- Added Read() and Write() to ICustomCsvParser&lt;T&gt;
- Refactored CsvReader&lt;T&gt; and  CsvWriter&lt;T&gt;
- Introduced CsvAttribute to set, at this attribute defaults for ICustomCsvParser can be set at class level.

1.7.53
- Improved CsvStreamReader speed.
- Added ReadAsEnumerable() to CsvStreamReader.

1.7.51
- Added DataTable extensions ImportCsv / ExportCsv
		
1.7.1
- Changed ICustomCsvParse to generic ICustomCsvParse

1.7
- Added CustomParserType to ColumnAttribute

1.6.3
- Added NullValueBehaviour to CsvWriter&lt;T&gt;
- Added CurrentLine to Reader
- Added LineNumber to Error log
- Added Flush() to Reader&lt;T&gt; and Writer&lt;T&gt;
- Refactored UnitTests in GitHub code Demo Tests and Validate Tests.

1.6.2
- Minor bugfix with CR only ending.

1.6.1
- Fixed bug with AutoDetectSeparator.
- Added EmptyLineBehaviour to CsvReader&lt;T&gt;
- Refactoring

1.6.0
- Added Last(int rows) function to Reader&lt;T&gt;.
- Added IEnumerable&lt;CsvReadError&gt; Errors to CsvReader&lt;T&gt;.
-Fixed Skip() counter.
- Correct handling for CRLF in CsvStreamReader and CsvReader&lt;T&gt;
    -  \r = CR(Carriage Return) → Used as a new line character in Mac OS before X
    -  \n = LF(Line Feed) → Used as a new line character in Unix/Mac OS X
    -  \r\n = CR + LF → Used as a new line character in Windows
- Added  CRLFMode to CsvStreamWriter and CsvWriter&lt;T&gt;

1.5.8
- Minor Improvements
- Added Skip() to CsvStreamReader
- Changed EndOfStream behaviour

1.5.7
- Small improvements

1.5.1
- Updated Readme
- Fixed bug with Skip(rows)
- Fixed small bug with ReadAsEnumerable() always started at position 0.

1.5
- Correct handling Null Types for Reader

1.4.5
- Refactoring
- Removed DynamicReader and DynamicWriter

1.4.2
- Another performance improvement for Reader

1.4
- Performance improvements for Writer.
- Added OutputFormat ro ColumnAttribute

1.3.8
- Performance improvement for Reader

1.3.2
- Bug fixes

1.3
- Improved constructors to support all parameters for underlying StreamReader and StreamWriters.
- Added Skip() to CsvReader (to be used in combination Read())
- Added WriteHeader() to CsvWriter()
- Added Header to Column attribute to be used by the CsvWriter
- GetCsvSeparator() / DetectSeparator(),detects more exotic separators.
- Added byte[] to base64 serialization to CsvReader and CsvWriter

1.2
- Added single Read() function.
- Rows() now marked as obsolete.
- Added ReadAsEnumerable() as replacement for Rows()
- Added GetCsvSeparator(int sampleRows) to CsvStreamReader()
- Added DetectSeparator() to CsvReader()

1.1.5
- Bug Fixes

1.1.4
- Added CsvUtils static class including some special Csv functions to use.

1.1.3
- Added CsvWriterDynamic

1.1.1
- Added CsvReaderDynamic

1.1.0
- Speed optimizations (using delegates instead of reflection)

1.0.5
- Read/Write Stream csv lines into a poco object.
- Query / Read / Write large csv files.</PackageReleaseNotes>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DocumentationFile>F:\DEV\GIT\DevToys.PocoCsv.Core\DevToys.PocoCsv.Core\DevToys.PocoCsv.Core.xml</DocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <Folder Include="Delegates\" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\..\CodeLibrary\CodeLibrary\GPL.txt">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <None Update="Readme.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

</Project>
